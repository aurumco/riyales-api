# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: market_data.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'market_data.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11market_data.proto\x12\x06market\"\xa0\x01\n\rCommodityItem\x12\x0c\n\x04\x64\x61te\x18\x01 \x01(\t\x12\x0c\n\x04time\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\r\n\x05price\x18\x05 \x01(\x01\x12\x16\n\x0e\x63hange_percent\x18\x06 \x01(\x01\x12\x0c\n\x04unit\x18\x07 \x01(\t\x12\x0f\n\x07name_fa\x18\x08 \x01(\t\x12\x0f\n\x07name_en\x18\t \x01(\t\">\n\rCommodityData\x12-\n\x0emetal_precious\x18\x01 \x03(\x0b\x32\x15.market.CommodityItem\"\xbd\x01\n\nCryptoItem\x12\x0c\n\x04\x64\x61te\x18\x01 \x01(\t\x12\x0c\n\x04time\x18\x02 \x01(\t\x12\x11\n\ttime_unix\x18\x03 \x01(\x03\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x0f\n\x07name_fa\x18\x05 \x01(\t\x12\r\n\x05price\x18\x06 \x01(\t\x12\x13\n\x0bprice_toman\x18\x07 \x01(\t\x12\x16\n\x0e\x63hange_percent\x18\x08 \x01(\x01\x12\x12\n\nmarket_cap\x18\t \x01(\x03\x12\x11\n\tlink_icon\x18\n \x01(\t\"/\n\nCryptoData\x12!\n\x05items\x18\x01 \x03(\x0b\x32\x12.market.CryptoItem\"\xb7\x01\n\x0c\x43urrencyItem\x12\x0c\n\x04\x64\x61te\x18\x01 \x01(\t\x12\x0c\n\x04time\x18\x02 \x01(\t\x12\x11\n\ttime_unix\x18\x03 \x01(\x03\x12\x0e\n\x06symbol\x18\x04 \x01(\t\x12\x0f\n\x07name_en\x18\x05 \x01(\t\x12\x0c\n\x04name\x18\x06 \x01(\t\x12\r\n\x05price\x18\x07 \x01(\x01\x12\x14\n\x0c\x63hange_value\x18\x08 \x01(\x01\x12\x16\n\x0e\x63hange_percent\x18\t \x01(\x01\x12\x0c\n\x04unit\x18\n \x01(\t\"3\n\x0c\x43urrencyData\x12#\n\x05items\x18\x01 \x03(\x0b\x32\x14.market.CurrencyItem\"\xc4\x01\n\x08GoldItem\x12\x0c\n\x04\x64\x61te\x18\x01 \x01(\t\x12\x0c\n\x04time\x18\x02 \x01(\t\x12\x11\n\ttime_unix\x18\x03 \x01(\x03\x12\x0e\n\x06symbol\x18\x04 \x01(\t\x12\x0f\n\x07name_en\x18\x05 \x01(\t\x12\x0c\n\x04name\x18\x06 \x01(\t\x12\r\n\x05price\x18\x07 \x01(\x01\x12\x14\n\x0c\x63hange_value\x18\x08 \x01(\x01\x12\x16\n\x0e\x63hange_percent\x18\t \x01(\x01\x12\x0c\n\x04unit\x18\n \x01(\t\x12\x0f\n\x07name_fa\x18\x0b \x01(\t\"+\n\x08GoldData\x12\x1f\n\x05items\x18\x01 \x03(\x0b\x32\x10.market.GoldItem\"X\n\x0eOrderBookLevel\x12\n\n\x02zd\x18\x01 \x01(\x05\x12\n\n\x02qd\x18\x02 \x01(\x03\x12\n\n\x02pd\x18\x03 \x01(\x03\x12\n\n\x02po\x18\x04 \x01(\x03\x12\n\n\x02qo\x18\x05 \x01(\x03\x12\n\n\x02zo\x18\x06 \x01(\x05\"\xc5\x04\n\tStockItem\x12\x0c\n\x04time\x18\x01 \x01(\t\x12\x0b\n\x03l18\x18\x02 \x01(\t\x12\x0b\n\x03l30\x18\x03 \x01(\t\x12\x0c\n\x04isin\x18\x04 \x01(\t\x12\n\n\x02id\x18\x05 \x01(\x03\x12\n\n\x02\x63s\x18\x06 \x01(\t\x12\r\n\x05\x63s_id\x18\x07 \x01(\x05\x12\t\n\x01z\x18\x08 \x01(\x03\x12\x0c\n\x04\x62vol\x18\t \x01(\x03\x12\n\n\x02mv\x18\n \x01(\x03\x12\x0b\n\x03\x65ps\x18\x0b \x01(\x01\x12\n\n\x02pe\x18\x0c \x01(\x01\x12\x0c\n\x04tmin\x18\r \x01(\x03\x12\x0c\n\x04tmax\x18\x0e \x01(\x03\x12\x0c\n\x04pmin\x18\x0f \x01(\x03\x12\x0c\n\x04pmax\x18\x10 \x01(\x03\x12\n\n\x02py\x18\x11 \x01(\x03\x12\n\n\x02pf\x18\x12 \x01(\x03\x12\n\n\x02pl\x18\x13 \x01(\x03\x12\x0b\n\x03plc\x18\x14 \x01(\x03\x12\x0b\n\x03plp\x18\x15 \x01(\x01\x12\n\n\x02pc\x18\x16 \x01(\x03\x12\x0b\n\x03pcc\x18\x17 \x01(\x03\x12\x0b\n\x03pcp\x18\x18 \x01(\x01\x12\x0b\n\x03tno\x18\x19 \x01(\x05\x12\x0c\n\x04tvol\x18\x1a \x01(\x03\x12\x0c\n\x04tval\x18\x1b \x01(\x03\x12\x12\n\nBuy_CountI\x18\x1c \x01(\x05\x12\x12\n\nBuy_CountN\x18\x1d \x01(\x05\x12\x13\n\x0bSell_CountI\x18\x1e \x01(\x05\x12\x13\n\x0bSell_CountN\x18\x1f \x01(\x05\x12\x14\n\x0c\x42uy_I_Volume\x18  \x01(\x03\x12\x14\n\x0c\x42uy_N_Volume\x18! \x01(\x03\x12\x15\n\rSell_I_Volume\x18\" \x01(\x03\x12\x15\n\rSell_N_Volume\x18# \x01(\x03\x12,\n\x0corder_levels\x18$ \x03(\x0b\x32\x16.market.OrderBookLevel\"-\n\tStockData\x12 \n\x05items\x18\x01 \x03(\x0b\x32\x11.market.StockItemb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'market_data_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_COMMODITYITEM']._serialized_start=30
  _globals['_COMMODITYITEM']._serialized_end=190
  _globals['_COMMODITYDATA']._serialized_start=192
  _globals['_COMMODITYDATA']._serialized_end=254
  _globals['_CRYPTOITEM']._serialized_start=257
  _globals['_CRYPTOITEM']._serialized_end=446
  _globals['_CRYPTODATA']._serialized_start=448
  _globals['_CRYPTODATA']._serialized_end=495
  _globals['_CURRENCYITEM']._serialized_start=498
  _globals['_CURRENCYITEM']._serialized_end=681
  _globals['_CURRENCYDATA']._serialized_start=683
  _globals['_CURRENCYDATA']._serialized_end=734
  _globals['_GOLDITEM']._serialized_start=737
  _globals['_GOLDITEM']._serialized_end=933
  _globals['_GOLDDATA']._serialized_start=935
  _globals['_GOLDDATA']._serialized_end=978
  _globals['_ORDERBOOKLEVEL']._serialized_start=980
  _globals['_ORDERBOOKLEVEL']._serialized_end=1068
  _globals['_STOCKITEM']._serialized_start=1071
  _globals['_STOCKITEM']._serialized_end=1652
  _globals['_STOCKDATA']._serialized_start=1654
  _globals['_STOCKDATA']._serialized_end=1699
# @@protoc_insertion_point(module_scope)
